    
include pagespeed-domains.conf;

# https://s3-eu-west-1.amazonaws.com/fu-logo/svg/francescas.svg

# ModPagespeedMapProxyDomain http://cdn.vookster.com 
# http://vookster.s3.amazonaws.com

# pagespeed MapProxyDomain https://fashionunited.com/images static.fashionunited.com.s3-eu-west-1.amazonaws.com

# pagespeed on;
# pagespeed FileCachePath /var/ngx_pagespeed_cache;
# pagespeed FileCachePath "/var/cache/pagespeed/";
# >>> Moved to http block

# FILTER SETTINGS

# keep enabled as not all filters are also in OptimizeForBandwidth
pagespeed RewriteLevel CoreFilters;

# More conservative, does not alter HTML AT ALL! # PageSpeed's default RewriteLevel of CoreFilters is designed to reduce latency, incurring a small risk of page breakage. A related goal, bandwidth reduction, can be achieved with close to zero risk of web-site breakage:
# pagespeed RewriteLevel OptimizeForBandwidth; 
pagespeed EnableFilters collapse_whitespace,remove_comments,extend_cache;
pagespeed EnableFilters rewrite_images;

# not in our version of pagespeed
pagespeed EnableFilters responsive_images,resize_images; 
# always use with resize_mobile_images
pagespeed EnableFilters inline_preview_images;    

#  Works just like inline_preview_images, but uses smaller placeholder images and only serves them to mobile browsers.
pagespeed EnableFilters resize_mobile_images; 
pagespeed EnableFilters insert_image_dimensions;
# pagespeed EnableFilters inline_images;

# Gives errors with images not showing on Joomla3 homepages:
pagespeed EnableFilters lazyload_images;

# tested with experiment =faster. Pagesped insights score = lower because you go from 1 to 2 js files. Breaks multiple Thinglink links: https://fashionunited.nl/nieuws/business/overzicht-winkelketens-die-recentelijk-failliet-gingen/2016021025586?PageSpeed=off
# This can bring huge performance increases but since we optimize & concat our JS ourselves it is not really beneficial.
# pagespeed EnableFilters defer_javascript; 

# HTTP/2 - According to Cloudflare HTTP/2 recommendations: https://blog.cloudflare.com/http-2-for-web-developers/
pagespeed EnableFilters outline_css;
# pagespeed EnableFilters outline_javascript; >>> this will outline the new relic script, we must not do that
pagespeed DisableFilters inline_css,inline_google_font_css,inline_javascript,inline_preview_images;
pagespeed DisableFilters combine_javascript,combine_css;
# END HTTP/2

pagespeed EnableFilters insert_dns_prefetch;

# pagespeed EnableFilters prioritize_critical_css;  # BREAKS THE DROPDOWN MENU!!
# pagespeed EnableFilters inline_javascript; >> in corefilters
##pagespeed EnableFilters outline_css; > these 3 might break things
##pagespeed EnableFilters outline_javascript;
##pagespeed EnableFilters inline_google_font_css;
# pagespeed EnableFilters local_storage_cache;
# https://developers.google.com/speed/pagespeed/module/filter-instrumentation-add
# pagespeed EnableFilters add_instrumentation;
# FOR TESTING ONLY: pagespeed EnableFilters outline_css,outline_javascript,insert_dns_prefetch,defer_javascript,elide_attributes,collapse_whitespace,remove_comments,resize_mobile_images,insert_image_dimensions,local_storage_cache,include_js_source_maps,prioritize_critical_css,rewrite_style_attributes,move_css_above_scripts,move_css_to_head;

# Enable experimant, logged in google analytics
# include pagespeed-experiment.conf;

    # Needs to exist and be writable by nginx.  
    # Use tmpfs (/dev/shm on Ubuntu) for best performance or filesystem to reduce memory footprint
    # pagespeed FileCachePath /dev/shm/ngx_pagespeed_cache;
    pagespeed FileCachePath /tmp/ngx_pagespeed_cache;

# Enable admin pages
location /ngx_pagespeed_statistics { allow 127.0.0.1;allow 84.241.133.73;allow 83.128.216.24;deny all; }
location /ngx_pagespeed_global_statistics { allow 127.0.0.1;allow 84.241.133.73;allow 83.128.216.24; deny all; }
location /ngx_pagespeed_message { allow 127.0.0.1;allow 84.241.133.73;allow 83.128.216.24; deny all; }
location /pagespeed_console { allow 127.0.0.1;allow 84.241.133.73;allow 83.128.216.24; deny all; }
location ~ ^/pagespeed_admin { allow 127.0.0.1;allow 84.241.133.73;allow 83.128.216.24; deny all; }
location ~ ^/pagespeed_global_admin { allow 127.0.0.1;allow 84.241.133.73;allow 83.128.216.24; deny all; }

# Ensure requests for pagespeed optimized resources go to the pagespeed handler
# and no extraneous headers get set.
location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
  add_header "" "";
}
location ~ "^/pagespeed_static/" { }
location ~ "^/ngx_pagespeed_beacon$" { }

    # pagespeed XHeaderValue "";
    more_clear_headers x-page-speed;

pagespeed XHeaderValue "Powered By ngx_pagespeed";
