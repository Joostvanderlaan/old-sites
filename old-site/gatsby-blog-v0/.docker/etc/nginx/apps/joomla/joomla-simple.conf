# -*- mode: nginx; mode: flyspell-prog;  ispell-local-dictionary: "american" -*-
### Nginx configuration for Drupal. This configuration makes use of
### drush (http:///drupal.org/project/drush) for site maintenance
### and like tasks:
###
### 1. Run the cronjobs.
### 2. Run the DB and code updates: drush up or drush upc followed by
###    drush updb to run any DB updates required by the code upgrades
###    that were performed.
### 3. Disabling of xmlrpc.xml, install.php (needed only for
###    installing the site) and update.php: all updates are now
###    handled through drush.

## The 'default' location.
location / {

#txt added Joost Blitz & removed html for links like this:
#http://www.fashionunited.fr/component/jobboard/list/1/list.html?jobsearch=rinaldi
    ## All static files will be served directly.
    location ~* ^.+\.(?:css|txt|cur|js|jpe?g|gif|htc|ico|png|xml|otf|ttf|eot|woff|svg)$ {

        access_log off;
        expires 30d;
        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;
        ## Set the OS file cache.
        open_file_cache max=3000 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
    }

    ## PDFs and powerpoint files handling.
    location ~* ^.+\.(?:pdf|pptx?)$ {
        expires 30d;
        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;
    }

    ## Replicate the Apache <FilesMatch> directive of Drupal standard
    ## .htaccess. Disable access to any code files. Return a 404 to curtail
    ## information disclosure. Hide also the text files. #Joost undo hiding txt files
#    location ~* ^(?:.+\.(?:htaccess|make|engine|inc|info|install|module|profile|po|pot|sh|.*sql|test|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
#        return 404;
#    }

    ## First we try the URI and relay to the /index.php?q=$uri&$args if not found.
        #Joost edit for Joomla
    try_files $uri $uri/ /index.php?$args; #JOOMLA
  #  try_files $uri $uri/ /index.php?q=$uri&$args; # DO NOT USE FOR JOOMLA! van nginx wiki #Belangrijk voor bepaalde bundles!!
}

########### Security measures ##########

## Uncomment the line below if you want to enable basic auth for
## access to all /admin URIs. Note that this provides much better
## protection if use HTTPS. Since it can easily be eavesdropped if you
## use HTTP.
include apps/joomla/admin_basic_auth.conf;

## Restrict access to the strictly necessary PHP files. Reducing the
## scope for exploits. Handling of PHP code and the Drupal event loop.
 location ~ \.php$ {
 	# Protection
 	  fastcgi_split_path_info ^(.+?\.php)(/.*)$;
                if (!-f $document_root$fastcgi_script_name) {
                        return 404;
                }
    ## Include the FastCGI config.
    include apps/joomla/fastcgi_joomla.conf;
    fastcgi_pass phpcgi;

    ## FastCGI microcache.
    include apps/joomla/microcache_fcgi.conf;
    ## FCGI microcache for authenticated users also.
    #include apps/joomla/microcache_fcgi_auth.conf;

    ## Filefield Upload progress
    ## http://drupal.org/project/filefield_nginx_progress support
    ## through the NginxUploadProgress modules.
    #    track_uploads uploads 60s;

    fastcgi_param PHP_VALUE "newrelic.appname=$host";
    fastcgi_param PHP_VALUE "newrelic.framework=joomla";
}

location @joomla-no-args {
    ## Include the specific FastCGI configuration. This is for a
    ## FCGI backend like php-cgi or php-fpm.
    include apps/joomla/fastcgi_no_args_joomla.conf;
    fastcgi_pass phpcgi;

    ## FastCGI microcache.
    include apps/joomla/microcache_fcgi.conf;
    ## FCGI microcache for authenticated users also.
    #include apps/joomla/microcache_fcgi_auth.conf;

    fastcgi_param PHP_VALUE "newrelic.appname=$host";
    fastcgi_param PHP_VALUE "newrelic.framework=joomla";
}

## Disallow access to .bzr, .git, .hg, .svn, .cvs directories: return
## 404 as not to disclose information.
location ^~ /.bzr {
    return 404;
}

location ^~ /.git {
    return 404;
}

location ^~ /.hg {
    return 404;
}

location ^~ /.svn {
    return 404;
}

location ^~ /.cvs {
    return 404;
}

location ^~ /configuration.php {
   internal;
}

## Disallow access to patches directory.
location ^~ /patches {
    return 404;
}

## Disallow access to drush backup directory.
location ^~ /backup {
    return 404;
}

## Disable access logs for robots.txt.
location = /robots.txt {
    access_log off;
    ## Add support for the robotstxt module
    ## http://drupal.org/project/robotstxt.
    try_files $uri @joomla-no-args;
}

## RSS feed support.
location = /rss.xml {
    try_files $uri @joomla-no-args;
}

## XML Sitemap support.
location = /sitemap.xml {
    try_files $uri @joomla-no-args;
}

## Support for favicon. Return an 1x1 transparent GIF if it doesn't
## exist.
location = /favicon.ico {
    expires 30d;
    try_files /favicon.ico @empty;
}

## Return an in memory 1x1 transparent GIF.
location @empty {
    expires 30d;
    empty_gif;
}

## Any other attempt to access PHP files returns a 404.
#JOOST TEST OFF
####location ~* ^.+\.php$ {
####    return 404;
####}

